Version 4
SHEET 1 2388 904
WIRE 512 -96 512 -144
WIRE 608 -96 512 -96
WIRE 848 -96 848 -144
WIRE 944 -96 848 -96
WIRE 512 -80 512 -96
WIRE 848 -80 848 -96
WIRE 464 -64 432 -64
WIRE 752 -64 704 -64
WIRE 800 -64 752 -64
WIRE 608 -32 608 -96
WIRE 608 -32 512 -32
WIRE 944 -32 944 -96
WIRE 944 -32 848 -32
WIRE 432 48 432 -64
WIRE 512 48 512 16
WIRE 512 48 432 48
WIRE 704 48 704 -64
WIRE 704 48 512 48
WIRE 752 112 704 112
WIRE 848 112 848 16
WIRE 848 112 752 112
WIRE 512 128 512 48
WIRE 848 128 848 112
WIRE 624 176 512 176
WIRE 960 176 848 176
WIRE 464 208 368 208
WIRE 704 208 704 112
WIRE 800 208 704 208
WIRE 848 240 848 224
WIRE 960 240 960 176
WIRE 960 240 848 240
WIRE 512 272 512 224
WIRE 144 288 144 256
WIRE 144 400 144 368
WIRE 512 400 512 352
WIRE 624 400 624 176
WIRE 848 400 848 240
FLAG 144 400 0
FLAG 144 256 Vdd
FLAG 368 208 VIN
FLAG 512 -144 Vdd
FLAG 512 400 0
FLAG 848 -144 Vdd
FLAG 624 400 0
FLAG 848 400 0
FLAG 752 -64 VOUT_P
FLAG 752 112 VOUT_N
SYMBOL voltage 144 272 R0
WINDOW 123 0 0 Left 0
WINDOW 39 0 0 Left 0
SYMATTR InstName V1
SYMATTR Value {VDD}
SYMBOL pmos4 464 16 M180
SYMATTR InstName M2R
SYMATTR Value CMOSP
SYMATTR Value2 l={L} w={W_M2R} ad={ADS(W_M2R, LD)} as={ADS(W_M2R, LD)} pd={PDS(W_M2R, LD)} ps={PDS(W_M2R, LD)}
SYMBOL nmos4 464 128 R0
SYMATTR InstName M1R
SYMATTR Value CMOSN
SYMATTR Value2 l={L} w={W_M1R} ad={ADS(W_M1R, LD)} as={ADS(W_M1R, LD)} pd={PDS(W_M1R, LD)} ps={PDS(W_M1R, LD)}
SYMBOL res 496 256 R0
SYMATTR InstName R1
SYMATTR Value {R}
SYMBOL pmos4 800 16 M180
SYMATTR InstName M2
SYMATTR Value CMOSP
SYMATTR Value2 l={L} w={W_M2} ad={ADS(W_M2, LD)} as={ADS(W_M2, LD)} pd={PDS(W_M2, LD)} ps={PDS(W_M2, LD)}
SYMBOL nmos4 800 128 R0
SYMATTR InstName M1
SYMATTR Value CMOSN
SYMATTR Value2 l={L} w={W_M1} ad={ADS(W_M1, LD)} as={ADS(W_M1, LD)} pd={PDS(W_M1, LD)} ps={PDS(W_M1, LD)}
TEXT -184 -104 Left 2 !.include "TSMC180.lib"
TEXT -184 -72 Left 2 !.func ADS(w, ld) = {w * ld}
TEXT -184 -40 Left 2 !.func PDS(w, ld) {w + 2*ld}
TEXT -184 56 Left 2 !.param W_M1R = { W_BASE * WIDE_FACT }
TEXT -184 88 Left 2 !.param W_M2R = { W_BASE * WPFACT * WIDE_FACT }
TEXT -184 -8 Left 2 !.param W_M1 = {W_BASE}
TEXT -184 24 Left 2 !.param W_M2 = { W_BASE * WPFACT }
